embed-server --server-config=${env.KEYCLOAK_CONFIG_FILE:standalone-ha.xml} --std-out=echo

echo Using server configuration file:
:resolve-expression(expression=${env.JBOSS_HOME}/standalone/configuration/${env.KEYCLOAK_CONFIG_FILE:standalone-ha.xml})

echo SETUP: Begin Keycloak custom configuration...

### Event Listeners SPI Configuration ###
echo SETUP: Event Listeners configuration
# Add dedicated eventsListener config element to allow configuring elements.
if (outcome == failed) of /subsystem=keycloak-server/spi=eventsListener/:read-resource
  echo SETUP: Add missing eventsListener SPI
  /subsystem=keycloak-server/spi=eventsListener:add()
  echo
end-if

echo SETUP: Configure built-in "jboss-logging" event listener
if (outcome == failed) of /subsystem=keycloak-server/spi=eventsListener/provider=jboss-logging/:read-resource
  echo SETUP: Add missing "jboss-logging" event listener
  /subsystem=keycloak-server/spi=eventsListener/provider=jboss-logging:add(enabled=true)
  echo
end-if

# periodic rotating logging to file for filebeat or similar
/subsystem=logging/size-rotating-file-handler=ACME-HANDLER:add(file={"path"=>"server-rotating.log", "relative-to"=>"jboss.server.log.dir"}, suffix=".yyyy.MM.dd", level="DEBUG")
/subsystem=logging/size-rotating-file-handler=ACME-HANDLER:write-attribute(name="append", value="true")
/subsystem=logging/root-logger=ROOT:add-handler(name="ACME-HANDLER")

# Propagate success events to INFO instead of DEBUG
# This allows to track successful logins in log analysis
/subsystem=keycloak-server/spi=eventsListener/provider=jboss-logging:write-attribute(name=properties.success-level,value=info)
/subsystem=keycloak-server/spi=eventsListener/provider=jboss-logging:write-attribute(name=properties.error-level,value=warn)

### Theme Configuration ###

echo SETUP: Theme configuration
/subsystem=keycloak-server/theme=defaults:write-attribute(name=cacheThemes,value=${env.KEYCLOAK_THEME_CACHING:true})
/subsystem=keycloak-server/theme=defaults:write-attribute(name=cacheTemplates,value=${env.KEYCLOAK_THEME_TEMPLATE_CACHING:true})
/subsystem=keycloak-server/theme=defaults:write-attribute(name=welcomeTheme,value=${env.KEYCLOAK_WELCOME_THEME:keycloak})
/subsystem=keycloak-server/theme=defaults:write-attribute(name=default,value=${env.KEYCLOAK_DEFAULT_THEME:keycloak})

### Hostname SPI Configuration ###

echo SETUP: Hostname configuration
# Configure Keycloak to use the frontend-URL as the base URL for backend endpoints
/subsystem=keycloak-server/spi=hostname/provider=default:write-attribute(name=properties.forceBackendUrlToFrontendUrl, value=${env.KEYCLOAK_FORCE_FRONTEND_TO_BACKEND_URL:true})

### Datasource Configuration ###

# echo SETUP: Database configuration
# /subsystem=datasources/data-source=KeycloakDS:write-attribute(name=min-pool-size,value=30)
# /subsystem=datasources/data-source=KeycloakDS:write-attribute(name=max-pool-size,value=30)

echo SETUP: Configure built-in "email" event listener to only send emails for user initiated UPDATE_PASSWORD events
/subsystem=keycloak-server/spi=eventsListener/provider=email:add(enabled=true)
# "UPDATE_TOTP","REMOVE_TOTP"
/subsystem=keycloak-server/spi=eventsListener/provider=email:write-attribute(name=properties.exclude-events,value=["LOGIN_ERROR"])

echo SETUP: Finished Keycloak custom configuration.

stop-embedded-server
