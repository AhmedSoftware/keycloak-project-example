embed-server --server-config=${env.KEYCLOAK_CONFIG_FILE:standalone-ha.xml} --std-out=echo

echo Using server configuration file:
:resolve-expression(expression=${env.JBOSS_HOME}/standalone/configuration/${env.KEYCLOAK_CONFIG_FILE:standalone-ha.xml})

echo SETUP: Begin Keycloak custom configuration...

### Event Listeners SPI Configuration ###
echo SETUP: Event Listeners configuration
# Add dedicated eventsListener config element to allow configuring elements.
if (outcome == failed) of /subsystem=keycloak-server/spi=eventsListener/:read-resource
  echo SETUP: Add missing eventsListener SPI
  /subsystem=keycloak-server/spi=eventsListener:add()
  echo
end-if

echo SETUP: Configure built-in "jboss-logging" event listener
if (outcome == failed) of /subsystem=keycloak-server/spi=eventsListener/provider=jboss-logging/:read-resource
  echo SETUP: Add missing "jboss-logging" event listener
  /subsystem=keycloak-server/spi=eventsListener/provider=jboss-logging:add(enabled=true)
  echo
end-if

# Propagate success events to INFO instead of DEBUG
# This allows to track successful logins in log analysis
/subsystem=keycloak-server/spi=eventsListener/provider=jboss-logging:write-attribute(name=properties.success-level,value=info)
/subsystem=keycloak-server/spi=eventsListener/provider=jboss-logging:write-attribute(name=properties.error-level,value=warn)

### Theme Configuration ###

echo SETUP: Theme configuration
/subsystem=keycloak-server/theme=defaults:write-attribute(name=cacheThemes,value=${env.KEYCLOAK_THEME_CACHING:true})
/subsystem=keycloak-server/theme=defaults:write-attribute(name=cacheTemplates,value=${env.KEYCLOAK_THEME_TEMPLATE_CACHING:true})
/subsystem=keycloak-server/theme=defaults:write-attribute(name=welcomeTheme,value=${env.KEYCLOAK_WELCOME_THEME:keycloak})
/subsystem=keycloak-server/theme=defaults:write-attribute(name=default,value=${env.KEYCLOAK_DEFAULT_THEME:keycloak})

### Hostname SPI Configuration ###

echo SETUP: Hostname configuration
# Configure Keycloak to use the frontend-URL as the base URL for backend endpoints
/subsystem=keycloak-server/spi=hostname/provider=default:write-attribute(name=properties.forceBackendUrlToFrontendUrl, value=${env.KEYCLOAK_FORCE_FRONTEND_TO_BACKEND_URL:true})

### Datasource Configuration ###

# echo SETUP: Database configuration
# /subsystem=datasources/data-source=KeycloakDS:write-attribute(name=min-pool-size,value=30)
# /subsystem=datasources/data-source=KeycloakDS:write-attribute(name=max-pool-size,value=30)

echo SETUP: Configure built-in "email" event listener to only send emails for user initiated UPDATE_PASSWORD events
/subsystem=keycloak-server/spi=eventsListener/provider=email:add(enabled=true)
# "UPDATE_TOTP","REMOVE_TOTP"
/subsystem=keycloak-server/spi=eventsListener/provider=email:write-attribute(name=properties.exclude-events,value=["LOGIN_ERROR"])

### MISC

echo SETUP: Avoid ... WARN...
# Avoid ... WARN  [org.jboss.as.ejb3.remote] (ClusterTopologyRegistrar - 1) WFLYEJB0509: Clustered EJBs in Node: keycloak-0 are bound to INADDR_ANY(0.0.0.0).
#                  Client cannot reach back the cluster when they are not in the same local network.
# See https://developer.jboss.org/thread/276859
/socket-binding-group=standard-sockets/socket-binding=http:list-add(name=client-mappings,value={destination-address=${jboss.host.name}})
/socket-binding-group=standard-sockets/socket-binding=https:list-add(name=client-mappings,value={destination-address=${jboss.host.name}})

echo SETUP: Get rid of WARN WFLYTX0013
# Gets rid of WARN WFLYTX0013: Node identifier property is set to the default value. Please make sure it is unique.
/subsystem=transactions:write-attribute(name=node-identifier,value="${env.NODE_IDENTIFIER:${jboss.node.name}}")

echo SETUP: cleanup configuration

if (outcome == success) of /subsystem=ejb3/service=remote:read-resource
  echo SETUP: Disable http remoting
  /subsystem=ejb3/service=remote:remove()
  echo
end-if

if (outcome == success) of /subsystem=modcluster/:read-resource
   echo SETUP: Remove modcluster subsystem
   /subsystem=modcluster:remove()
   /extension=org.jboss.as.modcluster:remove()
   /socket-binding-group=standard-sockets/socket-binding=modcluster:remove()
  echo
end-if

if (outcome == success) of /subsystem=undertow/server=default-server/ajp-listener=ajp:read-resource
  echo SETUP: Remove AJP Listener
  /subsystem=undertow/server=default-server/ajp-listener=ajp:remove()
  /socket-binding-group=standard-sockets/socket-binding=ajp:remove()
  echo
end-if

echo SETUP: Finished Keycloak custom configuration.

stop-embedded-server
