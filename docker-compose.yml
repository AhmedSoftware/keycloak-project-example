version: '3.8'
services:
  custom-keycloak:
    image: quay.io/keycloak/keycloak:12.0.4
    user: "1000:1000"
    env_file:
      - ./custom-keycloak.env
    environment:
#      KEYCLOAK_USER: "admin"
#      KEYCLOAK_PASSWORD: "admin"
      DB_VENDOR: "h2"
      KEYCLOAK_THEME_CACHING: "false"
      KEYCLOAK_THEME_TEMPLATE_CACHING: "false"
#      KEYCLOAK_IMPORT: "/opt/jboss/imex/custom-realm.json"
# use `docker-compose --env-file custom-keycloak.env up` to populate the KEYCLOAK_CONFIG_FILE variable.
    command: [ "--debug", "*:8787", "--server-config", "$KEYCLOAK_CONFIG_FILE" ]
    ports:
      - "8080:8080"
      - "127.0.0.1:9990:9990"
      - "127.0.0.1:8787:8787"
    volumes:
      - ./keycloak-extensions/target/classes:/opt/jboss/keycloak/standalone/deployments/keycloak-extensions.jar:z
      - ./keycloak-themes/src/main/resources/theme/custom:/opt/jboss/keycloak/themes/custom:z
      - ./testrun/data:/opt/jboss/keycloak/standalone/data:z
      - ./keycloak-docker/src/main/docker/keycloak/profile.properties:/opt/jboss/keycloak/standalone/configuration/profile.properties:z
      - ./imex:/opt/jboss/imex:z
      - ./cli:/opt/jboss/startup-scripts:z

  custom-keycloak-provisioning:
    # adorsys/keycloak-config-cli:v3.3.0-12.0.4
    image: adorsys/keycloak-config-cli@sha256:fc8051e8d097e869dfbb442c4045d450306725a0825bb1571bef96ad3cafe19c
    env_file:
      - ./custom-keycloak.env
    environment:
      KEYCLOAK_AVAILABILITYCHECK_ENABLED: "true"
      KEYCLOAK_AVAILABILITYCHECK_TIMEOUT: "120s"
      IMPORT_PATH: "/config"
      IMPORT_FORCE: "false"
      IMPORT_VARSUBSTITUTION: "true"
    volumes:
      - ./config:/config:z

  mailhog:
    # Web Interface: http://localhost:1080/#
    # Web API: http://localhost:1080/api/v2/messages
    # mailhog/mailhog:v1.0.1
    image: mailhog/mailhog@sha256:8d76a3d4ffa32a3661311944007a415332c4bb855657f4f6c57996405c009bea
    logging:
      driver: none
    ports:
      - "1080:8025"
      - "1025:1025"

  custom-demoapp:
    image: python:3.7-alpine
    command: [ "sh", "run.sh" ]
    working_dir: "/demoapp"
    volumes:
      - ./demoapp:/demoapp:z
    ports:
      - "4000:4000"
