realm: acme-internal
enabled: true
displayName: Acme Internal
displayNameHtml: Acme Internal
loginWithEmailAllowed: true
internationalizationEnabled: true
supportedLocales: ["en","de"]
defaultLocale: "en"
resetPasswordAllowed: true
loginTheme: "internal-modern"
accountTheme: "internal-modern"
adminTheme: keycloak
emailTheme: "internal-modern"
sslRequired: $(env:SSL_REQUIRED:-EXTERNAL)
browserFlow: "Browser Identity First"

# Bruteforce Protection
bruteForceProtected: true
permanentLockout: false
maxFailureWaitSeconds: 900
minimumQuickLoginWaitSeconds: 60
waitIncrementSeconds: 60
quickLoginCheckMilliSeconds: 1000
maxDeltaTimeSeconds: 43200
failureFactor: 10

eventsListeners:
  - "jboss-logging"
  - "email"
  - "acme-audit-listener"
  - "acme-metrics"

eventsEnabled: true
# 120 days
eventsExpiration: 10368000
# enabledEventTypes: [ "SEND_RESET_PASSWORD", "UPDATE_CONSENT_ERROR", "GRANT_CONSENT", ... ]
adminEventsEnabled: false
adminEventsDetailsEnabled: false
smtpServer:
  replyToDisplayName: "Acme Employee Support"
  port: 1025
  host: mailhog
  replyTo: "no-reply@localhost"
  from: "acme-internal-sso@local"
  fromDisplayName: "Acme Employee Account"

attributes:
  "acme.greeting": "Hello!"

clientScopes:
  - name: acme.profile
    description: Acme Profile Access
    protocol: openid-connect
  - name: acme.ageinfo
    description: Acme Profile AgeInfo
    protocol: openid-connect
    protocolMappers:
      - name: "Acme: Audience Resolve"
        protocol: openid-connect
        protocolMapper: oidc-audience-resolve-mapper
        consentRequired: false
      - name: "Acme: AgeInfo"
        protocol: openid-connect
        protocolMapper: oidc-acme-ageinfo-mapper
        consentRequired: false
        config:
          userinfo.token.claim: "true"
          id.token.claim: "true"
          access.token.claim: "false"

  - name: acme.api
    description: Acme API Access
    protocol: openid-connect

  - name: name
    description: Name Details
    protocol: openid-connect
    protocolMappers:
      - name: "Acme: Given Name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          "user.attribute": "firstName"
          "claim.name": "given_name"
          "userinfo.token.claim": "true"
          "id.token.claim": "true"
          "access.token.claim": "true"
      - name: "Acme: Family Name"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          "user.attribute": "lastName"
          "claim.name": "family_name"
          "userinfo.token.claim": "true"
          "id.token.claim": "true"
          "access.token.claim": "true"
      - name: "Acme: Display Name"
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          "userinfo.token.claim": "true"
          "id.token.claim": "true"
          "access.token.claim": "true"
      - name: "Acme: Username"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          "user.attribute": "username"
          "claim.name": "preferred_username"
          "userinfo.token.claim": "true"
          "id.token.claim": "true"
          "access.token.claim": "true"

requiredActions:
  - alias: acme-update-phonenumber
    name: 'Acme: Update Mobile Phonenumber'
    providerId: acme-update-phonenumber
    enabled: true
    defaultAction: false
    priority: 1100
  - alias: acme-manage-trusted-device
    name: 'Acme: Manage Trusted Device'
    providerId: acme-manage-trusted-device
    enabled: true
    defaultAction: false
    priority: 1200
  - alias: acme-generate-backup-codes
    name: 'Acme: Generate Backup Codes'
    providerId: acme-generate-backup-codes
    enabled: true
    defaultAction: false
    priority: 1300
  - alias: acme-update-email
    name: 'Acme: Update Email'
    providerId: acme-update-email
    enabled: true
    defaultAction: false
    priority: 1400

clients:
  - clientId: app-minispa
    protocol: openid-connect
    name: Acme Account Console
    description: "Acme Account Console Description"
    enabled: true
    publicClient: true
    standardFlowEnabled: true
    directAccessGrantsEnabled: false
# Show client in account-console
    alwaysDisplayInConsole: true
    serviceAccountsEnabled: false
#    attributes: { }
    fullScopeAllowed: false
    rootUrl: "$(env:APPS_FRONTEND_URL_MINISPA)"
    baseUrl: "/?realm=acme-internal&show=profile,settings,apps,security,logout"
    adminUrl: ""
    redirectUris:
      - "/*"
      - "http://localhost:4000/acme-account/*"
    webOrigins:
      - "+"
    defaultClientScopes:
      - "email"
      - "profile"
      - "acme.profile"
    optionalClientScopes:
      - "phone"
    attributes:
      "pkce.code.challenge.method": "S256"

  - clientId: app-greetme
    protocol: openid-connect
    name: Acme Greet Me
    description: "App Greet Me Description"
    enabled: true
    publicClient: true
    standardFlowEnabled: true
    directAccessGrantsEnabled: false
    # Show client in account-console
    alwaysDisplayInConsole: true
    serviceAccountsEnabled: false
    #    attributes: { }
    fullScopeAllowed: false
    rootUrl: "$(env:APPS_FRONTEND_URL_GREETME)"
    baseUrl: "/?realm=acme-internal"
    adminUrl: ""
    redirectUris:
      - "/*"
      - "http://localhost:4000/acme-greetme/*"
    webOrigins:
      - "+"
    defaultClientScopes:
      - "email"
    optionalClientScopes:
      - "phone"
      - "name"
    attributes:
      "pkce.code.challenge.method": "S256"

  - clientId: app-mobile
    protocol: openid-connect
    name: App Mobile
    description: "App Mobile Description"
    enabled: true
    publicClient: true
    standardFlowEnabled: true
# using directAccessGrantsEnabled just for demo purposes
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: false
    #    attributes: { }
    fullScopeAllowed: false
    redirectUris:
      - "acme://app/callback/*"
    defaultClientScopes:
      - "email"
      - "profile"
    optionalClientScopes:
      - "phone"
      - "offline_access"

  - clientId: acme_internal_idp_broker
    protocol: openid-connect
    name: Acme Internal Broker
    description: "Acme Internal IdP Broker Client"
    enabled: true
    publicClient: false
    standardFlowEnabled: true
    directAccessGrantsEnabled: false
    fullScopeAllowed: false
    secret: "$(env:ACME_APPS_INTERNAL_IDP_BROKER_SECRET:-secret)"
    redirectUris:
      - "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-apps/broker/idp-acme-internal/endpoint/*"
    webOrigins:
      - "+"
    defaultClientScopes:
      - "email"
      - "profile"
    optionalClientScopes:
      - "phone"

  - clientId: test-client
    protocol: openid-connect
    name: Test Client
    description: "Test Client Description"
    enabled: true
    publicClient: true
    standardFlowEnabled: true
    directAccessGrantsEnabled: true
    rootUrl: "$(env:APPS_FRONTEND_URL_MINISPA)"
    baseUrl: "/?realm=acme-internal&client_id=test-client"
    redirectUris:
      - "/*"
    webOrigins:
      - "+"
    defaultClientScopes:
      - "email"
      - "profile"
    optionalClientScopes:
      - "phone"
      - "acme.profile"
      - "acme.ageinfo"

  - clientId: test-client-ropc
    protocol: openid-connect
    name: Test Client ROPC
    description: "Test Client ROPC Description"
    enabled: true
    publicClient: false
    standardFlowEnabled: false
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: true
    secret: "$(env:ACME_APPS_INTERNAL_IDP_BROKER_SECRET:-secret)"
    defaultClientScopes:
      - "email"
      - "profile"
    optionalClientScopes:
      - "phone"
      - "acme.profile"
      - "acme.ageinfo"

  - clientId: app-keycloak-demo
    protocol: openid-connect
    name: Keycloak Demo App
    description: "Keycloak Demo App Description"
    enabled: true
    publicClient: true
    standardFlowEnabled: true
    directAccessGrantsEnabled: false
    # Show client in account-console
    alwaysDisplayInConsole: true
    serviceAccountsEnabled: false
    #    attributes: { }
    fullScopeAllowed: false
    rootUrl: "https://www.keycloak.org/app"
    baseUrl: "/#url=https://id.acme.test:8443/auth&realm=acme-internal&client=app-keycloak-demo"
    adminUrl: ""
    redirectUris:
      - "/*"
    webOrigins:
      - "+"
    defaultClientScopes:
      - "email"
      - "profile"
    optionalClientScopes:
      - "phone"

  - clientId: app-demo-service
    protocol: openid-connect
    name: Demo Service
    description: "Demo Service Description"
    enabled: true
    publicClient: false
    standardFlowEnabled: false
    directAccessGrantsEnabled: false
    serviceAccountsEnabled: true
    secret: "$(env:ACME_APPS_DEMO_SERVICE_SECRET:-secret)"
    defaultClientScopes:
      - "email"
      - "profile"
    optionalClientScopes:
      - "phone"

  - clientId: frontend-webapp-springboot
    protocol: openid-connect
    name: Acme Web App Spring Boot
    description: "Web App Spring Boot Description"
    enabled: true
    publicClient: false
    standardFlowEnabled: true
    directAccessGrantsEnabled: false
    # Show client in account-console
    alwaysDisplayInConsole: true
    serviceAccountsEnabled: false
    secret: "$(env:ACME_APPS_APP_WEB_SPRINGBOOT_SECRET:-secret)"
    fullScopeAllowed: false
    rootUrl: "https://apps.acme.test:4633/webapp"
    baseUrl: "/"
    adminUrl: ""
    redirectUris:
      - "/*"
    webOrigins:
      - "+"
    defaultClientScopes:
      - "email"
      - "profile"
    optionalClientScopes:
      - "phone"


authenticationFlows:
## Identity First Browser Login Flow
  - alias: "Browser Identity First"
    description: "This flow implements the Identity First pattern"
    providerId: basic-flow
    builtIn: false
    topLevel: true
    authenticationExecutions:
      - authenticator: auth-cookie
        requirement: ALTERNATIVE
      - authenticator: identity-provider-redirector
        requirement: ALTERNATIVE
      - flowAlias: "Identity Forms"
        requirement: ALTERNATIVE
        autheticatorFlow: true

  - alias: "Identity Forms"
    description: "Sub-Flow to ask user for username an password"
    providerId: basic-flow
    topLevel: false
    builtIn: false
    authenticationExecutions:
      - authenticator: auth-username-form
        requirement: REQUIRED
      - authenticator: auth-password-form
        requirement: REQUIRED
      - flowAlias: "2FA Forms"
        requirement: CONDITIONAL
        autheticatorFlow: true

  - alias: "2FA Forms"
    description: "Sub-Flow to ask user for 2FA"
    providerId: basic-flow
    topLevel: false
    builtIn: false
    authenticationExecutions:
      - authenticator: conditional-user-configured
        requirement: REQUIRED
      - authenticator: acme-auth-trusted-device
        requirement: ALTERNATIVE
      - authenticator: acme-auth-otp-form
        requirement: ALTERNATIVE
      - authenticator: acme-sms-authenticator
        requirement: ALTERNATIVE
        authenticatorConfig: "acme-sms-auth-default"
      - authenticator: acme-auth-backup-code
        requirement: ALTERNATIVE

authenticatorConfig:
  - alias: "acme-sms-auth-default"
    config:
      phoneNumberPattern: "\\+49.*"
      sender: "$realmDisplayName"
      length: "6"
      client: "mock"
      ttl: "300"
      attempts: "5"
      useWebOtp: true

roles:
# Realm specific roles
  realm:
  - name: "acme-user"
    description: "Acme User"

  - name: "acme-user-support"
    description: "Acme Support User"
    composite: true
    composites:
      client:
        "realm-management":
          - query-groups
          - view-users

  - name: "default-roles-acme-internal"
    description: "${role_default-roles}"
    composite: true
    composites:
      realm:
      - "offline_access"
      - "acme-user"
      client:
        "account":
        - "manage-account"
        - "view-profile"

# Client specific roles
  client:
    "test-client-ropc":
      - name: "role4"
        description: "Role 4 Description"
        clientRole: true

groups:
  - "name": "Users"
    #    "path": "/Users"
    "attributes":
      groupAttribute1: ["groupAttributeValue1"]
    "realmRoles":
      - "acme-user"
    #    "clientRoles": {}
    "subGroups": []

users:
  - username: employee
    email: employee@local
    firstName: Erik
    lastName: Employee
    enabled: true
    attributes:
      locale: ["de"]
    credentials:
      - type: password
        userLabel: initial
        value: test
        temporary: false
    groups:
      - "Users"

  - username: tester
    email: tester@local
    firstName: Theo
    lastName: Tester
    enabled: true
    attributes:
      locale: ["en"]
      phone_number: ["+49178111222333"]
      phone_number_verified: ["true"]
    credentials:
      - type: password
        userLabel: initial
        value: test
        temporary: false
    groups:
      - "Users"

  - username: support
    email: support@local
    firstName: Stefan
    lastName: Support
    enabled: true
    attributes:
      locale: ["de"]
    credentials:
      - type: password
        userLabel: initial
        value: test
        temporary: false
    realmRoles:
    - "acme-user-support"
    groups:
      - "Users"

  - username: service-account-app-demo-service
    enabled: true
    serviceAccountClientId: app-demo-service
    clientRoles:
      realm-management:
        - view-identity-providers
        - view-users