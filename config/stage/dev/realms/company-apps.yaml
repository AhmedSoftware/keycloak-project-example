realm: company-apps
enabled: true
displayName: Company Apps
displayNameHtml: Company Apps
loginWithEmailAllowed: true
registrationAllowed: true
registrationEmailAsUsername: true
#loginTheme: apps
loginTheme: keycloak
accountTheme: keycloak.v3
adminTheme: keycloak
emailTheme: keycloak
internationalizationEnabled: true
supportedLocales: ["en","de"]
defaultLocale: "en"
sslRequired: $(env:SSL_REQUIRED:-EXTERNAL)
browserFlow: "Browser Identity First with IdP Routing"
#registrationFlow: "Custom Registration"

# Custom realm attributes
attributes:
  # for http variant: http://apps.acme.test:4000
  "acme_site_url": "https://apps.acme.test:4443"
  "acme_terms_url": "https://apps.acme.test:4443/site/terms.html"
  "acme_imprint_url": "https://apps.acme.test:4443/site/imprint.html"
  "acme_privacy_url": "https://apps.acme.test:4443/site/privacy.html"
  #"acme_logo_url": "no example, should be taken from client or null"
  "acme_account_deleted_url": "https://apps.acme.test:4443/site/accountdeleted.html"

smtpServer:
  replyToDisplayName: "Company APPS Support"
  port: 1025
  host: mailhog
  replyTo: "no-reply@localhost"
  from: "company-apps-sso@local"
  fromDisplayName: "Company APPS Account"

clientScopes:
  - name: company
    description: Company Access
    protocol: openid-connect

identityProviders:
  - alias: "idp-acme-internal"
    displayName: "Acme Employee Login"
    providerId: "oidc"
    enabled: true
    updateProfileFirstLoginMode: on
    trustEmail: true
    storeToken: false
    addReadTokenRoleOnCreate: false
    authenticateByDefault: false
    linkOnly: false
    firstBrokerLoginFlowAlias: "first broker login"
#    postBrokerLoginFlowAlias: "Custom Post Broker Login"
    config:
      guiOrder: "1000"
      issuer: "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-internal"
      tokenUrl: "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-internal/protocol/openid-connect/token"
      jwksUrl: "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-internal/protocol/openid-connect/certs"
      userInfoUrl: "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-internal/protocol/openid-connect/userinfo"
      authorizationUrl: "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-internal/protocol/openid-connect/auth"
      logoutUrl: "$(env:KEYCLOAK_FRONTEND_URL)/realms/acme-internal/protocol/openid-connect/logout"
      clientId: "acme_internal_idp_broker"
      clientSecret: "$(env:ACME_APPS_INTERNAL_IDP_BROKER_SECRET:-secret)"
      clientAuthMethod: "client_secret_post"
      defaultScope: "openid"
      loginHint: "true"
      backchannelSupported: "true"
      validateSignature: "true"
      useJwksUrl: "true"
      syncMode: "FORCE"
      pkceMethod: "S256"
      pkceEnabled: "true"

  - alias: "idp-acme-azuread"
    displayName: "Acme AzureAD Login"
    providerId: "oidc"
    enabled: true
    updateProfileFirstLoginMode: on
    trustEmail: true
    storeToken: false
    addReadTokenRoleOnCreate: false
    authenticateByDefault: false
    linkOnly: false
    firstBrokerLoginFlowAlias: "first broker login"
    #    postBrokerLoginFlowAlias: "Custom Post Broker Login"
    config:
      guiOrder: "4000"
      issuer: "$(env:ACME_AZURE_AAD_TENANT_URL)/v2.0"
      tokenUrl: "$(env:ACME_AZURE_AAD_TENANT_URL)/oauth2/v2.0/token"
      jwksUrl: "$(env:ACME_AZURE_AAD_TENANT_URL)/discovery/v2.0/keys"
      userInfoUrl: "https://graph.microsoft.com/oidc/userinfo"
      authorizationUrl: "$(env:ACME_AZURE_AAD_TENANT_URL)/oauth2/v2.0/authorize"
      logoutUrl: "$(env:ACME_AZURE_AAD_TENANT_URL)/oauth2/v2.0/logout"
      clientId: "$(env:ACME_AZURE_AAD_TENANT_CLIENT_ID:-dummy)"
      clientSecret: "$(env:ACME_AZURE_AAD_TENANT_CLIENT_SECRET:-secret)"
      clientAuthMethod: "client_secret_post"
      defaultScope: "openid profile email"
      loginHint: "true"
      backchannelSupported: "true"
      validateSignature: "true"
      useJwksUrl: "true"
      syncMode: "FORCE"
      pkceMethod: "S256"
      pkceEnabled: "true"

authenticationFlows:
  ## Identity First Browser Login Flow
  - alias: "Browser Identity First with IdP Routing"
    description: "This flow implements the Identity First pattern"
    providerId: basic-flow
    builtIn: false
    topLevel: true
    authenticationExecutions:
      - authenticator: auth-cookie
        requirement: ALTERNATIVE
      - authenticator: identity-provider-redirector
        requirement: ALTERNATIVE
      - flowAlias: "Identity Forms"
        requirement: ALTERNATIVE
        autheticatorFlow: true

  - alias: "Identity Forms"
    description: "Sub-Flow to ask user for username an password"
    providerId: basic-flow
    topLevel: false
    builtIn: false
    authenticationExecutions:
      - authenticator: auth-username-form
        requirement: REQUIRED
      - authenticator: acme-dynamic-idp-selector
        requirement: REQUIRED
      - authenticator: auth-password-form
        requirement: REQUIRED
      - flowAlias: "2FA Forms"
        requirement: CONDITIONAL
        autheticatorFlow: true

  - alias: "2FA Forms"
    description: "Sub-Flow to ask user for 2FA"
    providerId: basic-flow
    topLevel: false
    builtIn: false
    authenticationExecutions:
      - authenticator: conditional-user-configured
        requirement: REQUIRED
      - authenticator: acme-auth-trusted-device
        requirement: ALTERNATIVE
      - authenticator: acme-auth-otp-form
        requirement: ALTERNATIVE
      - authenticator: acme-email-code-form
        requirement: ALTERNATIVE
      - authenticator: auth-recovery-authn-code-form
        requirement: ALTERNATIVE