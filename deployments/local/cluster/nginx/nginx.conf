upstream backend {

# see https://docs.nginx.com/nginx/admin-guide/load-balancer/http-load-balancer/#choosing-a-load-balancing-method
    ip_hash;

# http://nginx.org/en/docs/http/ngx_http_upstream_module.html#resolver_timeout
# resolver_timeout only available in nginx-plus
#    resolver_timeout 5s;

    server acme-keycloak-1:8080 max_fails=1 fail_timeout=3s;
    server acme-keycloak-2:8080 max_fails=1 fail_timeout=3s;

# Sticky sessions feature needs nginx-plus
#    sticky cookie srv_id expires=1h domain=.id.acme.test path=/auth;
}

server {
    listen 2443 ssl http2;
    server_name  id.acme.test;

    # this is the internal Docker DNS, cache only for 30s
    resolver 127.0.0.11 valid=15s;

    # Time to wait to connect to an upstream server
    proxy_connect_timeout       3;

    proxy_send_timeout          10;
    proxy_read_timeout          15;
    send_timeout                10;

# Disable access log
    access_log  off;

# generated via https://ssl-config.mozilla.org/#server=nginx&version=1.17.7&config=intermediate&openssl=1.1.1d&ocsp=false&guideline=5.6
    ssl_certificate /etc/nginx/certs/id.acme.test.crt;
    ssl_certificate_key /etc/nginx/certs/id.acme.test.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
#    ssl_dhparam /etc/ssl/dhparams;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
#    add_header Strict-Transport-Security "max-age=63072000" always;

    location / {
        proxy_set_header    Host               $host;
        proxy_set_header    X-Real-IP          $remote_addr;
        proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Host   $host;
        proxy_set_header    X-Forwarded-Server $host;
        proxy_set_header    X-Forwarded-Port   $server_port;
        proxy_set_header    X-Forwarded-Proto  $scheme;
        proxy_pass http://backend;

# health_check feature only available in nginx-plus
#         health_check interval=2s
#             fails=2
#             passes=5
#             uri=/auth
#             match=signin
#
#         match signin {
#             status 200;
#             header Content-Type = text/html;
#             body ~ "Sign In"
#         }
    }
}