services:
  acme-keycloak-db:
    build:
      context: "../../../config/stage/dev/tls"
      dockerfile: "../../../../deployments/local/dev/oracle/Dockerfile"
    environment:
      ORACLE_PWD: training
    command:
## Certificates are added in the Dockerfile with the proper permissions for mysql
#      - "mysqld"
#      - "--bind-address=0.0.0.0"
#      - "--require_secure_transport=ON"
#      - "--ssl-ca=/etc/certs/ca.crt"
#      - "--ssl-cert=/etc/certs/server.crt"
#      - "--ssl-key=/etc/certs/server.key"
    ports:
      - "51521:1521"
#    healthcheck:
#      test: "mysqladmin --user root --password=mysql status"
#      interval: 10s
#      timeout: 5s
#      retries: 5
    volumes:
      - ./run/oracle/data:/opt/oracle/oradata:z

  acme-keycloak:
    env_file:
      - ./keycloak-db.env
    environment:
      # keycloak-x
      KC_DB: oracle
#      KC_DB_URL_PROPERTIES: "?requireSSL=true&enabledTLSProtocols=TLSv1.2"
#      KC_DB_SCHEMA: "keycloak"
    volumes:
      # Allow TLS connection to ourself, this is necessary for cross realm Identity Brokering
#      - ../../../config/stage/dev/tls/acme.test+1.pem:/etc/x509/ca/tls.crt:z
#    depends_on:
#      acme-keycloak-db:
#        condition: service_healthy
